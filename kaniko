pipeline {
    agent {
        label 'slave1'
    }
    stages {
        stage('Clone') {
            steps {
                echo 'Building...'
                sh '''
                if [ -d "task188" ]; then
                    cd task188
                    git pull
                    cd ..
                else
                    git clone https://github.com/BalakhonovDenis/jenkinstask.git
                fi
                '''
            }
        }
        stage('Build') {
            steps {
                sh '''
                pwd
                ls -la
                docker-compose down
                docker image prune -af
                
                // Заменяем сборку образов с помощью Docker на сборку с помощью Kaniko
                chmod +x /home/ubuntu/jenkins/workspace/task188@tmp/durable-1171ddd9/script.sh.copy
                /kaniko/executor --context=/home/ubuntu/jenkins/workspace/task188/NGINX/ --dockerfile=Dockerfile --destination=den0303/nginx_testy:latest
                /kaniko/executor --context=/home/ubuntu/jenkins/workspace/task188/APACHE/ --dockerfile=Dockerfile --destination=den0303/apache_testy:latest
                '''
            }
        }
        stage('Push') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockehub-login', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh '''
                    echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
                    /kaniko/executor --context=/home/ubuntu/jenkins/workspace/task188/NGINX/ --destination=den0303/nginx_testy:latest --registry=https://index.docker.io/v1/
                    /kaniko/executor --context=/home/ubuntu/jenkins/workspace/task188/APACHE/ --destination=den0303/apache_testy:latest --registry=https://index.docker.io/v1/
                    '''
                }
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying...'
                sh '''
                docker-compose -f docker-compose.yaml up -d
                '''
            }
        }
    }
    post {
        always {
            echo 'Cleaning up...'
            deleteDir()
        }
    }
}
